#!/usr/bin/env ruby

require 'bundler/setup'
require 'rrm'

require 'highline'
require 'slop'

FileUtils.mkdir_p('/tmp/rrm/')

opts = Slop.parse do |o|
  o.separator ""
  o.separator "Required parameters"
  o.array '-u', '--urls', 'comma-separated list of git repository clone urls', delimiter: ','

  o.separator ""
  o.separator "Choose what to update:"
  o.bool  '--patch-next',   'next Patch version   (eg. 2.3.3 -> 2.3.4)'
  o.bool  '--patch-latest', 'latest Patch version (eg. 2.3.3 -> 2.3.8)'
  o.bool  '--minor-next',   'next Minor version   (eg. 2.3.3 -> 2.4.5)'
  o.bool  '--minor-latest', 'latest Minor version (eg. 2.3.3 -> 2.6.2)'
  o.bool  '--major-next',   'next Major version   (eg. 1.9.3 -> 2.6.2)'
  o.bool  '--major-latest', 'latest Major version (eg. 1.9.3 -> 2.6.2)'
  o.bool  '--update-gems',  'update gems in Gemfile.lock'

  o.separator ""
  o.separator "Extra options:"

  o.array '-e', '--env', 'List environment variables to pass into the Docker container', delimiter: ','

  o.on '-h', '--help', 'show this help' do
    puts o
    exit
  end

  o.on '--list-ruby-versions', 'list all Ruby version available to rrm' do
    puts Rrm.all_ruby_versions
    exit
  end

  o.on '--version', 'print the version' do
    puts "Ruby Repository Manager"
    puts "rrm #{Rrm::VERSION}"
    exit
  end
end

if opts[:urls].empty? || (opts[:patch])
  puts opts
else
  Rrm::Updater.new(opts).update_all
end
